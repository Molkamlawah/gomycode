# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1--KbUQo-W06E9f-xTUA8a9nEaPhiVsKj
"""

#binary search
def binary_search(arr, target):
    left, right = 0, len(arr) - 1
    while left <= right:
        mid = left + (right - left) // 2
        if arr[mid] == target:
            return True
        elif arr[mid] < target:
            left = mid + 1
        else:
            right = mid - 1
    return False

print(binary_search([1, 2, 3, 5, 8], 6))  # False
print(binary_search([1, 2, 3, 5, 8], 5))  # True

#power calculation
def power(a, b):
    return a ** b

print(power(3, 4))  # 81

#bubble sort
def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

sample_data = [29, 13, 22, 37, 52, 49, 46, 71, 56]
bubble_sort(sample_data)
print(sample_data)  # [13, 22, 29, 37, 42, 46, 49, 56, 71]

#merge sort
def merge_sort(arr):
    if len(arr) <= 1:
        return arr

    mid = len(arr) // 2
    left_half = merge_sort(arr[:mid])
    right_half = merge_sort(arr[mid:])

    return merge(left_half, right_half)

def merge(left, right):
    result = []
    i = j = 0

    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1

    result.extend(left[i:])
    result.extend(right[j:])
    return result

sample_data = [29, 13, 22, 37, 52, 49, 46, 71, 56]
result = merge_sort(sample_data)
print(result)  # [13, 22, 29, 37, 42, 46, 49, 56, 71]

#quick sort
def quick_sort(arr):
    if len(arr) <= 1:
        return arr

    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]

    return quick_sort(left) + middle + quick_sort(right)

sample_data = [29, 13, 22, 37, 52, 49, 46, 71, 56]
result = quick_sort(sample_data)
print(result)  # [13, 22, 29, 37, 42, 46, 49, 56, 71]